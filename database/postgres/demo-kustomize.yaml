apiVersion: v1
# Kind for kubernets ConfigMap
kind: ConfigMap
metadata:
  # Name your ConfigMap
  name: db-secret-credentials
  namespace: database
  labels:
    app: postgresdb
data:
  # User DB
  POSTGRES_DB: demo
  # Db user
  POSTGRES_USER: demo
  # Db password
  POSTGRES_PASSWORD: demo
  # For debezium and strimzi integration
  SHARED_PRELOAD_LIBRARIES: decoderbufs
  WAL_LEVEL: logical
---
# Kubernetes API version
apiVersion: apps/v1
# Deployment object
kind: Deployment
metadata:
  # The name of the Deployment
  name: postgresdb
  namespace: database
spec:
  # Replicas for this Deployment
  replicas: 1
  selector:
    # labels the pods
    matchLabels:
      app: postgresdb
  template:
    metadata:
      labels:
        # The label the pods created from the pod template should have
        app: postgresdb
    spec:
      containers:
        # The container name to execute pods
        - name: postgresdb
          # pull postgresimage from docker hub
          image: postgres
          ports:
            # Assign ports to expose container
            - containerPort: 5432
          envFrom:
            # Load the environment variables/PostgresSQL credentials
            - configMapRef:
                # This should be the ConfigMap name created ealier
                name: db-secret-credentials
          volumeMounts:
            # The volume mounts  for the container
            - mountPath: /var/lib/postgresql/data
              name: db-data
      # Volumes attached to the pod
      volumes:
        - name: db-data
          persistentVolumeClaim:
            # reference the PersistentVolumeClaim
            claimName: postgres-pvc
---
apiVersion: v1
# Kind for service
kind: Service
metadata:
  # Name your service
  name: postgresdb
  namespace: database
  labels:
    app: postgresdb
spec:
  # Choose how to expose your service
  type: NodePort
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30432
  # Pod to route service traffic  
  selector:
    app: postgresdb
