apiVersion: v1
data:
  kafka-metrics-config.yml: |
    # See https://github.com/prometheus/jmx_exporter for more info about JMX Prometheus Exporter metrics
    lowercaseOutputName: true
    rules:
    # Special cases and very specific rules
    - pattern: kafka.server<type=(.+), name=(.+), clientId=(.+), topic=(.+), partition=(.*)><>Value
      name: kafka_server_$1_$2
      type: GAUGE
      labels:
       clientId: "$3"
       topic: "$4"
       partition: "$5"
    - pattern: kafka.server<type=(.+), name=(.+), clientId=(.+), brokerHost=(.+), brokerPort=(.+)><>Value
      name: kafka_server_$1_$2
      type: GAUGE
      labels:
       clientId: "$3"
       broker: "$4:$5"
    - pattern: kafka.server<type=(.+), cipher=(.+), protocol=(.+), listener=(.+), networkProcessor=(.+)><>connections
      name: kafka_server_$1_connections_tls_info
      type: GAUGE
      labels:
        cipher: "$2"
        protocol: "$3"
        listener: "$4"
        networkProcessor: "$5"
    - pattern: kafka.server<type=(.+), clientSoftwareName=(.+), clientSoftwareVersion=(.+), listener=(.+), networkProcessor=(.+)><>connections
      name: kafka_server_$1_connections_software
      type: GAUGE
      labels:
        clientSoftwareName: "$2"
        clientSoftwareVersion: "$3"
        listener: "$4"
        networkProcessor: "$5"
    - pattern: "kafka.server<type=(.+), listener=(.+), networkProcessor=(.+)><>(.+):"
      name: kafka_server_$1_$4
      type: GAUGE
      labels:
       listener: "$2"
       networkProcessor: "$3"
    - pattern: kafka.server<type=(.+), listener=(.+), networkProcessor=(.+)><>(.+)
      name: kafka_server_$1_$4
      type: GAUGE
      labels:
       listener: "$2"
       networkProcessor: "$3"
    # Some percent metrics use MeanRate attribute
    # Ex) kafka.server<type=(KafkaRequestHandlerPool), name=(RequestHandlerAvgIdlePercent)><>MeanRate
    - pattern: kafka.(\w+)<type=(.+), name=(.+)Percent\w*><>MeanRate
      name: kafka_$1_$2_$3_percent
      type: GAUGE
    # Generic gauges for percents
    - pattern: kafka.(\w+)<type=(.+), name=(.+)Percent\w*><>Value
      name: kafka_$1_$2_$3_percent
      type: GAUGE
    - pattern: kafka.(\w+)<type=(.+), name=(.+)Percent\w*, (.+)=(.+)><>Value
      name: kafka_$1_$2_$3_percent
      type: GAUGE
      labels:
        "$4": "$5"
    # Generic per-second counters with 0-2 key/value pairs
    - pattern: kafka.(\w+)<type=(.+), name=(.+)PerSec\w*, (.+)=(.+), (.+)=(.+)><>Count
      name: kafka_$1_$2_$3_total
      type: COUNTER
      labels:
        "$4": "$5"
        "$6": "$7"
    - pattern: kafka.(\w+)<type=(.+), name=(.+)PerSec\w*, (.+)=(.+)><>Count
      name: kafka_$1_$2_$3_total
      type: COUNTER
      labels:
        "$4": "$5"
    - pattern: kafka.(\w+)<type=(.+), name=(.+)PerSec\w*><>Count
      name: kafka_$1_$2_$3_total
      type: COUNTER
    # Generic gauges with 0-2 key/value pairs
    - pattern: kafka.(\w+)<type=(.+), name=(.+), (.+)=(.+), (.+)=(.+)><>Value
      name: kafka_$1_$2_$3
      type: GAUGE
      labels:
        "$4": "$5"
        "$6": "$7"
    - pattern: kafka.(\w+)<type=(.+), name=(.+), (.+)=(.+)><>Value
      name: kafka_$1_$2_$3
      type: GAUGE
      labels:
        "$4": "$5"
    - pattern: kafka.(\w+)<type=(.+), name=(.+)><>Value
      name: kafka_$1_$2_$3
      type: GAUGE
    # Emulate Prometheus 'Summary' metrics for the exported 'Histogram's.
    # Note that these are missing the '_sum' metric!
    - pattern: kafka.(\w+)<type=(.+), name=(.+), (.+)=(.+), (.+)=(.+)><>Count
      name: kafka_$1_$2_$3_count
      type: COUNTER
      labels:
        "$4": "$5"
        "$6": "$7"
    - pattern: kafka.(\w+)<type=(.+), name=(.+), (.+)=(.*), (.+)=(.+)><>(\d+)thPercentile
      name: kafka_$1_$2_$3
      type: GAUGE
      labels:
        "$4": "$5"
        "$6": "$7"
        quantile: "0.$8"
    - pattern: kafka.(\w+)<type=(.+), name=(.+), (.+)=(.+)><>Count
      name: kafka_$1_$2_$3_count
      type: COUNTER
      labels:
        "$4": "$5"
    - pattern: kafka.(\w+)<type=(.+), name=(.+), (.+)=(.*)><>(\d+)thPercentile
      name: kafka_$1_$2_$3
      type: GAUGE
      labels:
        "$4": "$5"
        quantile: "0.$6"
    - pattern: kafka.(\w+)<type=(.+), name=(.+)><>Count
      name: kafka_$1_$2_$3_count
      type: COUNTER
    - pattern: kafka.(\w+)<type=(.+), name=(.+)><>(\d+)thPercentile
      name: kafka_$1_$2_$3
      type: GAUGE
      labels:
        quantile: "0.$4"
  zookeeper-metrics-config.yml: |
    # See https://github.com/prometheus/jmx_exporter for more info about JMX Prometheus Exporter metrics
    lowercaseOutputName: true
    rules:
    # replicated Zookeeper
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+)><>(\\w+)"
      name: "zookeeper_$2"
      type: GAUGE
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+)><>(\\w+)"
      name: "zookeeper_$3"
      type: GAUGE
      labels:
        replicaId: "$2"
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+), name2=(\\w+)><>(Packets\\w+)"
      name: "zookeeper_$4"
      type: COUNTER
      labels:
        replicaId: "$2"
        memberType: "$3"
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+), name2=(\\w+)><>(\\w+)"
      name: "zookeeper_$4"
      type: GAUGE
      labels:
        replicaId: "$2"
        memberType: "$3"
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+), name2=(\\w+), name3=(\\w+)><>(\\w+)"
      name: "zookeeper_$4_$5"
      type: GAUGE
      labels:
        replicaId: "$2"
        memberType: "$3"
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"kafka-metrics-config.yml":"# See https://github.com/prometheus/jmx_exporter for more info about JMX Prometheus Exporter metrics\nlowercaseOutputName: true\nrules:\n# Special cases and very specific rules\n- pattern: kafka.server\u003ctype=(.+), name=(.+), clientId=(.+), topic=(.+), partition=(.*)\u003e\u003c\u003eValue\n  name: kafka_server_$1_$2\n  type: GAUGE\n  labels:\n   clientId: \"$3\"\n   topic: \"$4\"\n   partition: \"$5\"\n- pattern: kafka.server\u003ctype=(.+), name=(.+), clientId=(.+), brokerHost=(.+), brokerPort=(.+)\u003e\u003c\u003eValue\n  name: kafka_server_$1_$2\n  type: GAUGE\n  labels:\n   clientId: \"$3\"\n   broker: \"$4:$5\"\n- pattern: kafka.server\u003ctype=(.+), cipher=(.+), protocol=(.+), listener=(.+), networkProcessor=(.+)\u003e\u003c\u003econnections\n  name: kafka_server_$1_connections_tls_info\n  type: GAUGE\n  labels:\n    cipher: \"$2\"\n    protocol: \"$3\"\n    listener: \"$4\"\n    networkProcessor: \"$5\"\n- pattern: kafka.server\u003ctype=(.+), clientSoftwareName=(.+), clientSoftwareVersion=(.+), listener=(.+), networkProcessor=(.+)\u003e\u003c\u003econnections\n  name: kafka_server_$1_connections_software\n  type: GAUGE\n  labels:\n    clientSoftwareName: \"$2\"\n    clientSoftwareVersion: \"$3\"\n    listener: \"$4\"\n    networkProcessor: \"$5\"\n- pattern: \"kafka.server\u003ctype=(.+), listener=(.+), networkProcessor=(.+)\u003e\u003c\u003e(.+):\"\n  name: kafka_server_$1_$4\n  type: GAUGE\n  labels:\n   listener: \"$2\"\n   networkProcessor: \"$3\"\n- pattern: kafka.server\u003ctype=(.+), listener=(.+), networkProcessor=(.+)\u003e\u003c\u003e(.+)\n  name: kafka_server_$1_$4\n  type: GAUGE\n  labels:\n   listener: \"$2\"\n   networkProcessor: \"$3\"\n# Some percent metrics use MeanRate attribute\n# Ex) kafka.server\u003ctype=(KafkaRequestHandlerPool), name=(RequestHandlerAvgIdlePercent)\u003e\u003c\u003eMeanRate\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+)Percent\\w*\u003e\u003c\u003eMeanRate\n  name: kafka_$1_$2_$3_percent\n  type: GAUGE\n# Generic gauges for percents\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+)Percent\\w*\u003e\u003c\u003eValue\n  name: kafka_$1_$2_$3_percent\n  type: GAUGE\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+)Percent\\w*, (.+)=(.+)\u003e\u003c\u003eValue\n  name: kafka_$1_$2_$3_percent\n  type: GAUGE\n  labels:\n    \"$4\": \"$5\"\n# Generic per-second counters with 0-2 key/value pairs\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+)PerSec\\w*, (.+)=(.+), (.+)=(.+)\u003e\u003c\u003eCount\n  name: kafka_$1_$2_$3_total\n  type: COUNTER\n  labels:\n    \"$4\": \"$5\"\n    \"$6\": \"$7\"\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+)PerSec\\w*, (.+)=(.+)\u003e\u003c\u003eCount\n  name: kafka_$1_$2_$3_total\n  type: COUNTER\n  labels:\n    \"$4\": \"$5\"\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+)PerSec\\w*\u003e\u003c\u003eCount\n  name: kafka_$1_$2_$3_total\n  type: COUNTER\n# Generic gauges with 0-2 key/value pairs\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+), (.+)=(.+), (.+)=(.+)\u003e\u003c\u003eValue\n  name: kafka_$1_$2_$3\n  type: GAUGE\n  labels:\n    \"$4\": \"$5\"\n    \"$6\": \"$7\"\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+), (.+)=(.+)\u003e\u003c\u003eValue\n  name: kafka_$1_$2_$3\n  type: GAUGE\n  labels:\n    \"$4\": \"$5\"\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+)\u003e\u003c\u003eValue\n  name: kafka_$1_$2_$3\n  type: GAUGE\n# Emulate Prometheus 'Summary' metrics for the exported 'Histogram's.\n# Note that these are missing the '_sum' metric!\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+), (.+)=(.+), (.+)=(.+)\u003e\u003c\u003eCount\n  name: kafka_$1_$2_$3_count\n  type: COUNTER\n  labels:\n    \"$4\": \"$5\"\n    \"$6\": \"$7\"\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+), (.+)=(.*), (.+)=(.+)\u003e\u003c\u003e(\\d+)thPercentile\n  name: kafka_$1_$2_$3\n  type: GAUGE\n  labels:\n    \"$4\": \"$5\"\n    \"$6\": \"$7\"\n    quantile: \"0.$8\"\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+), (.+)=(.+)\u003e\u003c\u003eCount\n  name: kafka_$1_$2_$3_count\n  type: COUNTER\n  labels:\n    \"$4\": \"$5\"\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+), (.+)=(.*)\u003e\u003c\u003e(\\d+)thPercentile\n  name: kafka_$1_$2_$3\n  type: GAUGE\n  labels:\n    \"$4\": \"$5\"\n    quantile: \"0.$6\"\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+)\u003e\u003c\u003eCount\n  name: kafka_$1_$2_$3_count\n  type: COUNTER\n- pattern: kafka.(\\w+)\u003ctype=(.+), name=(.+)\u003e\u003c\u003e(\\d+)thPercentile\n  name: kafka_$1_$2_$3\n  type: GAUGE\n  labels:\n    quantile: \"0.$4\"\n","zookeeper-metrics-config.yml":"# See https://github.com/prometheus/jmx_exporter for more info about JMX Prometheus Exporter metrics\nlowercaseOutputName: true\nrules:\n# replicated Zookeeper\n- pattern: \"org.apache.ZooKeeperService\u003cname0=ReplicatedServer_id(\\\\d+)\u003e\u003c\u003e(\\\\w+)\"\n  name: \"zookeeper_$2\"\n  type: GAUGE\n- pattern: \"org.apache.ZooKeeperService\u003cname0=ReplicatedServer_id(\\\\d+), name1=replica.(\\\\d+)\u003e\u003c\u003e(\\\\w+)\"\n  name: \"zookeeper_$3\"\n  type: GAUGE\n  labels:\n    replicaId: \"$2\"\n- pattern: \"org.apache.ZooKeeperService\u003cname0=ReplicatedServer_id(\\\\d+), name1=replica.(\\\\d+), name2=(\\\\w+)\u003e\u003c\u003e(Packets\\\\w+)\"\n  name: \"zookeeper_$4\"\n  type: COUNTER\n  labels:\n    replicaId: \"$2\"\n    memberType: \"$3\"\n- pattern: \"org.apache.ZooKeeperService\u003cname0=ReplicatedServer_id(\\\\d+), name1=replica.(\\\\d+), name2=(\\\\w+)\u003e\u003c\u003e(\\\\w+)\"\n  name: \"zookeeper_$4\"\n  type: GAUGE\n  labels:\n    replicaId: \"$2\"\n    memberType: \"$3\"\n- pattern: \"org.apache.ZooKeeperService\u003cname0=ReplicatedServer_id(\\\\d+), name1=replica.(\\\\d+), name2=(\\\\w+), name3=(\\\\w+)\u003e\u003c\u003e(\\\\w+)\"\n  name: \"zookeeper_$4_$5\"\n  type: GAUGE\n  labels:\n    replicaId: \"$2\"\n    memberType: \"$3\"\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app":"strimzi"},"name":"kafka-metrics","namespace":"kafka"}}
  creationTimestamp: "2022-04-23T02:36:14Z"
  labels:
    app: strimzi
  name: kafka-metrics
  namespace: kafka
  resourceVersion: "8570390"
  uid: b53f5bcc-3fec-45b3-9396-c0cee8d8b0c5
