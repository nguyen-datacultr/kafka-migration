apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  labels:
    app: demo
    app.kubernetes.io/managed-by: Helm
    chart: kafka-0.1.0
    component: kafka
    heritage: Helm
    release: demo
  name: demo
  namespace: kafka
spec:
  entityOperator:
    userOperator:
      resources:
        limits:
          cpu: "0.5"
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 256Mi
    topicOperator:
      resources:
        limits:
          cpu: "0.5"
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 256Mi
  kafka:
    authorization:
      superUsers:
      - CN=demo
      - demo
      type: simple
    config:
      auto.create.topics.enable: "false"
      default.replication.factor: 3
      delete.topic.enable: "true"
      log.retention.ms: -1
      max.message.bytes: 1572864
      num.io.threads: 48
      num.network.threads: 40
      num.partitions: 128
      num.replica.fetchers: 32
      offsets.retention.minutes: 525600
      offsets.topic.replication.factor: 3
      replica.fetch.max.bytes: 1572864
      replica.socket.receive.buffer.bytes: 1048576
      retention.ms: "2628000000"
      socket.receive.buffer.bytes: 1048576
      socket.send.buffer.bytes: 1048576
      transaction.state.log.min.isr: 2
      transaction.state.log.replication.factor: 3
    jvmOptions:
      -Xms: 1024m
      -Xmx: 1024m
      gcLoggingEnabled: false
    listeners:
    - name: plain
      port: 9092
      tls: false
      type: internal
      # authentication:
      #   type: scram-sha-512
    - name: tls
      port: 9093
      tls: true
      type: internal
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          key: kafka-metrics-config.yml
          name: kafka-metrics
    replicas: 3
    resources:
      limits:
        cpu: "1"
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
    storage:
      class: kafka-manual
      deleteClaim: true
      size: 15Gi
      type: persistent-claim
    template:
      pod:
        # affinity:
        #   podAntiAffinity:
        #     requiredDuringSchedulingIgnoredDuringExecution:
        #     - labelSelector:
        #         matchExpressions:
        #         - key: strimzi.io/name
        #           operator: In
        #           values:
        #           - demo-kafka
        #       topologyKey: kubernetes.io/hostname
        securityContext:
          runAsUser: 0
          fsGroup: 0
  kafkaExporter:
    groupRegex: .*
    topicRegex: .*
    resources:
      limits:
        cpu: "0.5"
        memory: 512Mi
      requests:
        cpu: "0.2"
        memory: 128Mi
    livenessProbe:
      initialDelaySeconds: 60
      timeoutSeconds: 60
    readinessProbe:
      initialDelaySeconds: 60
      timeoutSeconds: 60
  zookeeper:
    jvmOptions:
      -Xms: 512m
      -Xmx: 512m
      gcLoggingEnabled: false
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          key: zookeeper-metrics-config.yml
          name: kafka-metrics
    replicas: 1
    resources:
      limits:
        cpu: "0.5"
        memory: 1Gi
      requests:
        cpu: "0.3"
        memory: 512Mi
    storage:
      class: zookeeper-manual
      deleteClaim: true
      size: 5Gi
      type: persistent-claim
    template:
      pod:
        # affinity:
        #   podAntiAffinity:
        #     requiredDuringSchedulingIgnoredDuringExecution:
        #     - labelSelector:
        #         matchExpressions:
        #         - key: strimzi.io/name
        #           operator: In
        #           values:
        #           - demo-zookeeper
        #       topologyKey: kubernetes.io/hostname
        securityContext:
          runAsUser: 0
          fsGroup: 0
